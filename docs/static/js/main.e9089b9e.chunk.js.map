{"version":3,"sources":["components/CharInput/CharInput.tsx","components/CharsTable/CharTable.tsx","components/CharPie/CharPie.tsx","components/App/App.tsx","store/Store.ts","index.tsx","store/createStore.ts","components/App/App.module.css"],"names":["CharInput","observer","_class2","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","initializerDefineProperty","_descriptor","assertThisInitialized","onChange","e","saveValue","target","value","notify","inherits","createClass","key","store","props","placeholder","allowedChars","react_default","a","createElement","input","allowClear","Component","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","_class","CharTable","CharTable_class","chars","slice","table","dataSource","columns","pagination","title","dataIndex","CharPie","CharPie_class","data","map","item","char","count","color","getColorByChar","dist_default","label","_ref","Math","round","percentage","lineWidth","labelPosition","labelStyle","fontSize","fontFamily","fill","colors","random","toString","padStart","App","inject","_dec","App_class","onChangeChars","setValue","className","styles","root","CharInput_CharInput","CharTable_CharTable","CharPie_CharPie","Store","Store_class","Store_descriptor","_allowedChars","mapper","getCharStatMapper","getCharStat","sort","sortCharStat","getUniqChars","entries","_ref2","slicedToArray","split","forEach","reduce","b","charCodeAt","get","keys","action","getOwnPropertyDescriptor","computed","stores","setAllowedChars","createStore","ReactDOM","render","mobx_react_module","App_App","document","getElementById","module","exports","appear"],"mappings":"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","file":"static/js/main.e9089b9e.chunk.js","sourcesContent":["import React, { ChangeEvent, Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Input } from \"antd\";\nimport { observable } from \"mobx\";\nimport { IStore } from \"../../store/IStore\";\n\nexport interface CharInputProp {\n  onChange: (value: string) => void;\n  store: IStore;\n}\n\n@observer\nexport class CharInput extends Component<CharInputProp> {\n  @observable\n  private value: string = \"\";\n\n  public render(): React.ReactNode {\n    const { store } = this.props;\n    const placeholder: string = `allowed chars: ${store.allowedChars}`;\n    return (\n      <Input\n        placeholder={placeholder}\n        value={this.value}\n        onChange={this.onChange}\n        allowClear\n      />\n    );\n  }\n\n  private onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.saveValue(e.target.value);\n    this.notify();\n  };\n\n  private saveValue(value: string): void {\n    this.value = value;\n  }\n\n  private notify(): void {\n    const { onChange } = this.props;\n    onChange(this.value);\n  }\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { IStore } from \"../../store/IStore\";\nimport { Table } from \"antd\";\n\nexport interface CharTableProps {\n  store: IStore;\n}\n\n@observer\nexport class CharTable extends Component<CharTableProps> {\n  public render(): React.ReactNode {\n    const store = this.props.store;\n    const data = store.chars.slice();\n\n    return data.length ? (\n      <Table\n        dataSource={store.chars.slice()}\n        columns={columns}\n        pagination={false}\n      />\n    ) : null;\n  }\n}\n\nconst columns = [\n  {\n    title: \"Char\",\n    dataIndex: \"char\",\n    key: \"char\"\n  },\n  {\n    title: \"Count\",\n    dataIndex: \"count\",\n    key: \"count\"\n  }\n];\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { IStore } from \"../../store/IStore\";\nimport ReactMinimalPieChart from \"react-minimal-pie-chart\";\n\nexport interface CharPieProps {\n  store: IStore;\n}\n\n@observer\nexport class CharPie extends Component<CharPieProps> {\n  public render(): React.ReactNode {\n    const store = this.props.store;\n\n    const data: {\n      title: string;\n      value: number;\n      color: string;\n      key: string;\n    }[] = store.chars.map(item => ({\n      title: item.char,\n      value: item.count,\n      key: item.char,\n      color: getColorByChar(item.char)\n    }));\n\n    return (\n      <ReactMinimalPieChart\n        data={data}\n        label={({ data, dataIndex }) =>\n          Math.round(data[dataIndex].percentage) + \"%\"\n        }\n        lineWidth={15}\n        labelPosition={70}\n        labelStyle={{\n          fontSize: \"5px\",\n          fontFamily: \"sans-serif\",\n          fill: \"#000000\"\n        }}\n      />\n    );\n  }\n}\n\nconst colors: { [field: string]: string } = {};\n\nfunction getColorByChar(char: string): string {\n  if (!colors[char]) {\n    const color: string = `#${Math.round(Math.random() * 0xffffff)\n      .toString(16)\n      .padStart(6, \"0\")}`;\n\n    colors[char] = color;\n  }\n\n  return colors[char];\n}\n","import React, { Component } from \"react\";\nimport styles from \"./App.module.css\";\nimport { inject } from \"mobx-react\";\nimport { CharInput } from \"../CharInput/CharInput\";\nimport { CharTable } from \"../CharsTable/CharTable\";\nimport { CharPie } from \"../CharPie/CharPie\";\nimport { IStore } from \"../../store/IStore\";\n\ninterface AppProps {\n  store?: IStore;\n}\n\n@inject(\"store\")\nexport class App extends Component<AppProps> {\n  public render(): React.ReactNode {\n    const store: IStore = this.props.store!;\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.item}>\n          <CharInput store={store} onChange={this.onChangeChars} />\n        </div>\n        <div className={styles.item}>\n          <CharTable store={store} />\n        </div>\n        <div className={styles.item}>\n          <CharPie store={store} />\n        </div>\n      </div>\n    );\n  }\n\n  onChangeChars = (value: string) => {\n    const store: IStore = this.props.store!;\n    store.setValue(value);\n  };\n}\n","import { action, computed, observable } from \"mobx\";\nimport { IStore, CharStat } from \"./IStore\";\n\nexport class Store implements IStore {\n  @observable chars: CharStat[] = [];\n\n  @action\n  setValue(value: string): void {\n    const mapper: CharStatMapper = this.getCharStatMapper(value);\n    const chars: CharStat[] = this.getCharStat(mapper);\n    chars.sort(this.sortCharStat);\n\n    this.chars = chars;\n  }\n\n  @action\n  setAllowedChars(value: string): void {\n    this._allowedChars = this.getUniqChars(value);\n  }\n\n  @computed\n  get allowedChars(): string[] {\n    return Object.keys(this._allowedChars).sort();\n  }\n\n  private getCharStat(mapper: CharStatMapper): CharStat[] {\n    return Object.entries(mapper).map(([key, value]) => ({\n      char: key,\n      count: value\n    }));\n  }\n\n  private getCharStatMapper(value: string): CharStatMapper {\n    const mapper: { [field: string]: number } = {};\n\n    const chars: string[] = value.split(\"\");\n\n    chars.forEach(char => {\n      if (this._allowedChars[char]) {\n        if (!mapper[char]) {\n          mapper[char] = 0;\n        }\n\n        mapper[char]++;\n      }\n    });\n\n    return mapper;\n  }\n\n  private getUniqChars(value: string): AllowedChars {\n    const chars: string[] = value.split(\"\");\n\n    return chars.reduce((chars: AllowedChars, item: string) => {\n      chars[item] = true;\n      return chars;\n    }, {});\n  }\n\n  private sortCharStat(a: CharStat, b: CharStat): number {\n    return a.char.charCodeAt(0) - b.char.charCodeAt(0);\n  }\n\n  private _allowedChars: AllowedChars = {};\n}\n\nexport type AllowedChars = { [key: string]: true };\n\nexport type CharStatMapper = { [field: string]: number };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { App } from \"./components/App/App\";\nimport { Provider } from \"mobx-react\";\nimport { createStore } from \"./store/createStore\";\n\nconst stores = {\n  store: createStore(\"abc\")\n};\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { Store } from \"./Store\";\nimport { IStore } from \"./IStore\";\n\nexport function createStore(allowedChars: string): IStore {\n  const store: Store = new Store();\n  store.setAllowedChars(allowedChars);\n  return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1Jh3p\",\"appear\":\"App_appear__PpXyh\",\"item\":\"App_item__2R1_5\"};"],"sourceRoot":""}